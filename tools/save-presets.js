#!/usr/bin/env node

/**
 * Quick Preset Save Script
 * 
 * –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è presets.json –∏–∑ Preset Generator
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node save-presets.js (—Å–∫–æ–ø–∏—Ä—É–µ—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞)
 */

const fs = require('fs').promises;
const path = require('path');
const { execSync } = require('child_process');

async function savePresets() {
  try {
    console.log('üìã Reading presets from clipboard...');
    
    // –ß–∏—Ç–∞–µ–º –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ (macOS)
    const clipboardContent = execSync('pbpaste', { encoding: 'utf8' });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π JSON
    let presetData;
    try {
      presetData = JSON.parse(clipboardContent);
    } catch (error) {
      console.error('‚ùå Clipboard does not contain valid JSON');
      console.log('üí° Copy the JSON output from Preset Generator first');
      process.exit(1);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ presets.json —Ñ–æ—Ä–º–∞—Ç
    if (!presetData.presets || !Array.isArray(presetData.presets)) {
      console.error('‚ùå Invalid presets.json format');
      console.log('üí° Make sure you copied the complete presets.json from Preset Generator');
      process.exit(1);
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ assets/presets.json
    const presetsPath = path.join(__dirname, '../assets/presets.json');
    await fs.writeFile(presetsPath, JSON.stringify(presetData, null, 2));
    
    console.log(`‚úÖ Saved ${presetData.presets.length} presets to assets/presets.json`);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–º–º–∏—Ç–∏–º –∏ –ø—É—à–∏–º
    console.log('üöÄ Auto-committing and deploying...');
    
    execSync('git add assets/presets.json', { cwd: path.join(__dirname, '..') });
    execSync(`git commit -m "feat: update presets via Preset Generator

- ${presetData.presets.length} presets total
- Updated: ${new Date().toLocaleString()}
- Auto-deployed to CDN"`, { cwd: path.join(__dirname, '..') });
    execSync('git push', { cwd: path.join(__dirname, '..') });
    
    console.log('üéâ Presets deployed! They will be available in plugin in ~1 minute');
    console.log('üí° Use the üîÑ button in plugin to refresh immediately');
    
  } catch (error) {
    console.error('‚ùå Failed to save presets:', error.message);
    process.exit(1);
  }
}

if (require.main === module) {
  savePresets();
}
